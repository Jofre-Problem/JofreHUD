UnlitGeneric
{
"$baseTexture" "vgui\replay\thumbnails\timer\digits_1"
$translucent 1
$alpha 1
$vertexalpha 1
$ignorez 1
$no_fullbright 1
$vertexcolor 1

$const1 100
$const2 10
$tmp1 0
$tmp2 0
$tmp3 0
$speed 0
$res1 0
$res2 0
$tmp4 0
$tmp5 0
$const3 1
$speed2 0
$speed3 0
$franum 0
$franum2 0
$const4 1
$const5 1
$const6 0
$const7 -1
$res 0

$speed5 0
$speed6 0
$speed7 0

$const10 1
$const12 1
$const13 0
$const14 -1
$franum5 0
$franum6 0
$franum7 0

    Proxies
      {
        PlayerSpeed
        {
        "scale" "1"
        "resultVar" "$speed2"
        }

        Add
        {
        "srcVar1" "$speed2"
        "srcVar2" "$speed3"
        "resultVar" "$speed"
        }
       
        Equals
        {
        "srcVar1" "$speed"
        "resultVar" "$speed3"
        }
 
        Add
        {
        "srcVar1" "$franum"
        "srcVar2" "$const4"
        "resultVar" "$franum2"
        }

       Equals
        {
        "srcVar1" "$franum2"
        "resultVar" "$franum"
        }

         Divide
        {
        "srcVar1" "$speed"
        "srcVar2" "$franum2"
        "resultVar" "$res"
        }

       Equals
        {
        "srcVar1" "$speed3"
        "resultVar" "$speed5"
        }
  
       Equals
        {
        "srcVar1" "$speed3"
        "resultVar" "$speed7"
        }
      
 
       LessOrEqual
       {
      "lessEqualVar" "$const6"
      "greaterVar" "$speed5"
      "srcVar1" "$speed2"
      "srcVar2" "$const3"
      "resultVar" "$speed6"
      }

      LessOrEqual
      {
      "lessEqualVar" "$const5"
      "greaterVar" "$const7"
      "srcVar1" "$speed2"
      "srcVar2" "$const3"
      "resultVar" "$const3"
      }

      LessOrEqual
      {
      "lessEqualVar" "$speed7"
      "greaterVar" "$speed6"
      "srcVar1" "$const3"
      "srcVar2" "$const6"
      "resultVar" "$speed3"
      }
   
       Equals
        {
        "srcVar1" "$franum"
        "resultVar" "$franum5"
        }
  
       Equals
        {
        "srcVar1" "$franum"
        "resultVar" "$franum7"
        }
      
 
       LessOrEqual
       {
      "lessEqualVar" "$const13"
      "greaterVar" "$franum5"
      "srcVar1" "$speed2"
      "srcVar2" "$const10"
      "resultVar" "$franum6"
      }

      LessOrEqual
      {
      "lessEqualVar" "$const12"
      "greaterVar" "$const14"
      "srcVar1" "$speed2"
      "srcVar2" "$const10"
      "resultVar" "$const10"
      }

      LessOrEqual
      {
      "lessEqualVar" "$franum7"
      "greaterVar" "$speed6"
      "srcVar1" "$const10"
      "srcVar2" "$const13"
      "resultVar" "$franum"
      }
     
       
        Divide
        {
        "srcVar1" "$res"
        "srcVar2" "$const1"
        "resultVar" "$tmp1"
        }

        Frac
        {
        "srcVar1" "$tmp1"
        "resultVar" "$res1"
        }

       Multiply
        {
        "srcVar1" "$res1"
        "srcVar2" "$const1"
        "resultVar" "$tmp2"
        }
    
        Subtract
        {
        "srcVar1" "$res"
        "srcVar2" "$tmp2"
        "resultVar" "$res2"
        }

       Divide
        {
        "srcVar1" "$res1"
        "srcVar2" "$const2"
        "resultVar" "$tmp3"
        }

        Frac
        {
        "srcVar1" "$tmp3"
        "resultVar" "$tmp4"
        }

       Multiply
        {
        "srcVar1" "$tmp4"
        "srcVar2" "$const2"
        "resultVar" "$tmp5"
        }
    
        Subtract
        {
        "srcVar1" "$res1"
        "srcVar2" "$tmp5"
        "resultVar" "$frame"
        }

      }
}
