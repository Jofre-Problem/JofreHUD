# NOITAZILAIT VERSION 5

# NOT A STANDARD INI -- EDIT WITH CAUTION

# -= NOTES =-
# Independant file to bridge platforms and allow minor customization
# All data read once at startup
# Anything between blocks is completely ignored
# Both '#' and ';' are valid in-block comment symbols if first character of line
# '=' is NOT supported


# General settings
# <setting>:<value>
[general]

minimize_output_on_startup:true

;open_new_vmaterial_on_new_vmt:true
;dir_list_1_default_dir:%VPROJECT%
;filter_dir_list_1_by_active_window:false
;dir_list_2_default_dir:%VPROJECT%
;filter_dir_list_2_by_active_window:false
;check_for_updates_on_startup:false

windows_command_run:start *

# xdg-open works on all freedesktop.org compliant distributions
linux_command_run:xdg-open *
# Gnome
#linux_command_run:gnome-open *
# Cgywin
#linux_command_run:cgystart *

[/general]

# VICE keys
# <game>:<key>
[vice]

HL2:DM:x9Ke0BY7
CS:S:d7NSuLq2
DoD:S:Wl0u5B3F

[/vice]

# Sound formatting characters
# Comments not allowed within this block
# <character> <name>:<tooltip>
[soundchars]

* CHAR_STREAM:Indicates streaming wav data
? CHAR_USERVOX:Indicates user realtime voice data
! CHAR_SENTENCE:Indicates sentence wav
# CHAR_DRYMIX:Indicates wav bypasses dsp fx
> CHAR_DOPPLER:Indicates doppler encoded stereo wav: left wav (incomming) and right wav (outgoing)
< CHAR_DIRECTIONAL:Indicates stereo wav has direction cone: mix left wav (front facing) with right wav (rear facing) based on soundfacing direction
^ CHAR_DISTVARIANT:Indicates distance variant encoded stereo wav (left is close, right is far)
@ CHAR_OMNI:Indicates non-directional wav (default mono or stereo)
) CHAR_SPATIALSTEREO:Indicates spatialized stereo wav
} CHAR_FAST_PITCH:Forces low quality, non-interpolated pitch shift

[/soundchars]

# Material shaders
# <shader>:<tooltip>
[shaders]

;"Aftershock"
;"Aftershock_dx9"

;"Alienscale"

;"BaseTimesMod2xEnvMap"

;"Bik"
;"Bik_dx80"
;"Bik_dx81"

;"Bloom"

;"BlurFilterX"

;"BlurFilterY"

;"BufferClearObeyStencil"

Cable:Used for ropes and cables.
Cable_DX6:Fallback shader.
Cable_DX8:Fallback shader.
Cable_DX9:Fallback shader.

;"Camo"

;"Cloak"
;"Cloak_DX90"

;"Cloud"

;"Core"
;"Core_dx70"
;"Core_DX80"
;"Core_DX90"

;"DebugBumpedLightmap"

;"DebugBumpedVertexLit"

;"DebugFBTexture"

;"DebugLightingOnly"

;"DebugLightmap"

;"DebugLuxels"

;"DebugNormalMap"

;"DebugTangentSpace"

;"DebugTextureView"
;"DebugTextureView_dx9"

;"DebugUnlit"

;"DebugVertexLit"

;"DecalBaseTimesLightmapAlphaBlendSelfIllum"
;"DecalBaseTimesLightmapAlphaBlendSelfIllum_DX6"
;"DecalBaseTimesLightmapAlphaBlendSelfIllum_DX8"
;"DecalBaseTimesLightmapAlphaBlendSelfIllum_DX9"

DecalModulate:Used for decals applied to models.
DecalModulate_dx6:Fallback shader.
DecalModulate_dx9:Fallback shader.

;"Detail"

;"Downsample"

;"Downsample_nohdr"

;"Engine_Post"

;"Eyeball"

;"EyeGlint"
;"EyeGlint_dx9"

EyeRefract:L4D only. Heavy duty version of "eyes".
EyeRefract_dx9:Fallback shader.

Eyes:Standard eye shader.
Eyes_dx6:Fallback shader.
Eyes_dx8:Fallback shader.
Eyes_dx9:Fallback shader.

;"Fillrate"

;"FilmDust_DX7"

;"FilmGrain_DX7"

;"FloatCombine"

;"FloatCombine_Autoexpose"

;"FloatToScreen"

GooInGlass:Used for drawing a bump-mapped texture behind a semi-transparent albedo.

;"HDRSelectRange"

;"hsl_filmgrain_pass1"

;"hsl_filmgrain_pass2"

;"hsv"

Jellyfish:Similar to "Refract".

;"Jojirium"

LightmappedGeneric:Standard world lightmap shader.
LightmappedGeneric_Decal:Fallback shader.
LightmappedGeneric_DX6:Fallback shader.
LightmappedGeneric_DX8:Fallback shader.
LightmappedGeneric_NoBump_DX8:Fallback shader.

LightmappedReflective:For use with func_reflective_glass.
LightmappedReflective_DX90:Fallback shader.

LightmappedTwoTexture:Two lightmapped textures are evenly mixed.

;"ModelAdditiveTransEnvMapWithMaskedTexture"

;"Modulate"
;"Modulate_DX6"
;"Modulate_DX8"
;"Modulate_DX9"

;"MonitorScreen"
;"MonitorScreen_DX8"
;"MonitorScreen_DX9"

;"MorphAccumulate"

;"MorphWeight"

;"MotionBlur"

;"Occlusion"

;"Overlay_Fit"

;"ParticleLitGeneric_DX9"

ParticleSphere:Used for env_particlelight?

;Patch:Used to improve upon other VMT files.

;"Portal"
;"Portal_DX60"
;"Portal_DX80"
;"Portal_DX90"

;"PortalRefract"
;"PortalRefract_dx8"
;"PortalRefract_dx9"

;"PortalStaticOverlay"
;"PortalStaticOverlay_DX60"

"Predator"
"Predator_DX60"
"Predator_DX80"

;"ReflectTexture"

Refract:Uses the du/dv or normal map to distort the image.
Refract_DX60:Fallback shader.
Refract_DX80:Fallback shader.
Refract_DX90:Fallback shader.

;"Rift_DX6"

;"sample4x4"

;"Sample4x4_Blend"

;"screenspace_general"

;"SetZ"

ShadowBuild:Used to generate render-to-texture shadows.

;"ShadowModel"

ShatteredGlass:Used for func_breakable_surf.
ShatteredGlass_DX7:Fallback shader.
ShatteredGlass_DX8:Fallback shader.

;"ShowDestAlpha"

;"Skin_DX9"

Sky:Standard skybox texture shader.
Sky_dx6:Fallback shader.
Sky_DX9:Fallback shader.
Sky_HDR_DX9:Fallback shader.

SplineRope:L4D only. Used for ropes and cables.

Sprite:Standard sprite shader.
Sprite_DX6:Fallback shader.
Sprite_DX8:Fallback shader.
Sprite_DX9:Fallback shader.

SpriteCard:Standard particle system shader.

Teeth:Standard teeth shader.
Teeth_DX6:Fallback shader.
Teeth_DX8:Fallback shader.
Teeth_DX9:Fallback shader.

UnlitGeneric:Standard non-lightmapped texture shader.
UnlitGeneric_DX6:Fallback shader.
UnlitGeneric_DX8:Fallback shader.

UnlitTwoTexture:Two non-lightmapped textures are evenly mixed. Reported not work with the Orange Box engine.
UnlitTwoTexture_DX6:Fallback shader.
UnlitTwoTexture_DX8:Fallback shader.
UnlitTwoTexture_DX9:Fallback shader.

VertexLitGeneric:Standard model texture shader.
VertexLitGeneric_DX6:Fallback shader.
VertexLitGeneric_DX7:Fallback shader.
VertexLitGeneric_DX8:Fallback shader.
VertexLitGeneric_NoBump_DX8:Fallback shader.

;"VertexNormals"

;"VolumeClouds"
;"VolumeClouds_dx9"

;"VolumetricFog"

"VortWarp"
"VortWarp_DX7"
"VortWarp_dx8"
"VortWarp_DX9"

Water:Standard water shader.
Water_DX60:Fallback shader.
Water_DX80:Fallback shader.
Water_DX81:Fallback shader.
Water_DX90:Fallback shader.
Water_DX9_HDR:Fallback shader.

;"WaterSurfaceBottom"

;"WindowImposter"
;"WindowImposter_DX60"
;"WindowImposter_DX80"
;"WindowImposter_DX90"

"Wireframe"
"Wireframe_DX6"
"Wireframe_DX8"
"Wireframe_DX9"

WorldTwoTextureBlend:Used to render two albedos with a single material.
WorldTwoTextureBlend_DX6:Fallback shader.
WorldTwoTextureBlend_DX8:Fallback shader.

;"WorldVertexAlpha"
;"WorldVertexAlpha_DX8"

WorldVertexTransition:Standard displacement blend shader.
WorldVertexTransition_DX6:Fallback shader.
WorldVertexTransition_DX8:Fallback shader.
WorldVertexTransition_DX9:Fallback shader.

;"WriteStencil"

"WriteZ"

;"yuv"

[/shaders]

# Material keyvalues
# <keyvalue>:<tooltip>
[parameters]

%compile2dsky
%compileclip
%compiledetail
%compilefog
%compilehint
%compileladder
%compilenodraw
%compilenolight
%compilenonsolid
%compilenpcclip
%compileorigin
%compilepassbullets
%compileplayercontrolclip
%compileskip
%compilesky
%compileslime
%compileteam
%compiletrigger:Compile brush as a trigger volume.
%compilewater:Compile brush as a water volume.
%detailtype:Defines the set of detail sprites and models the material should use.
%keywords:For use with Hammer's keyword filter.
%tooltexture:Texture to show in Hammer's material browser.

$abovewater
$additive
$albedo
$alpha
$alphatest
$alphatestreference
$alphatocoverage
$ambientoccltexture
$ambientocclusiontexture

$basealphaenvmapmask

$basetexture:First albedo.
$basetexturenoenvmap
$basetextureoffset
$basetexturescale
$basetexturetransform

$basetexture2
$basetexture2noenvmap
$basetextureoffset2
$basetexturescale2
$basetexturetransform2

$blendframes
$blendmodulatetexture

$bottommaterial

$bumpframe
$bumpmap
$bumpoffset
$bumpscale
$bumptransform

$bumpframe2
$bumpmap2
$bumpoffset2
$bumpscale2
$bumptransform2

$cheapwaterenddistance
$cheapwaterstartdistance
$cloudalphatexture
$cloudscale
$color
$compress
$cornea
$corneatexture
$crackmaterial

$decal
$decalfadeduration
$decalfadetime
$decalscale
$decalsecondpass

$detail
$detail_alpha_mask_base_texture
$detailblendfactor
$detailblendmode
$detailframe
$detailscale
$detailtint

$distancealpha

$dudvframe

$edgesoftnessend
$edgesoftnessstart

$envmap
$envmapcontrast
$envmapframe
$envmapmask
$envmapmaskframe
$envmapmaskscale
$envmapmasktransform
$envmapmode
$envmapoptional
$envmapsaturation
$envmaptint

$flesh
$fleshbordernoisescale
;<0.0 -- 0.5>
$fleshbordersoftness
$fleshbordertexture1d
$fleshbordertint
$fleshborderwidth
$fleshcubetexture
$fleshdebugforcefleshon
$fleshglossbrightness
$fleshinteriorenabled
$fleshinteriornoisetexture
$fleshinteriortexture
$fleshnormaltexture
$fleshsubsurfacetexture

$fogcolor
$fogenable
$fogend
$fogstart

$forcebump
$forcecheap
$forceexpensive
$forcerefract
$fresnalpower

$gammacolorread
$glassenvmap
$glassenvmaptint
$glow
$glowalpha
$glowcolor
$glowend
$glowstart
$glowx
$glowy

$halflambert
$hdrbasetexture

$ignorevertexcolors
$ignorez
;$include:Include the contents of another VMT.
$iris

$lightwarptexture
$linearwrite

$maskscale
$material
$maxfadesize
$maxlight
$maxsize
$minfadesize
$minlight
$minsize
$model
$modelmaterial
$multipass

$nocull
$nodecal
$nofog
$normalmap
$normalmapalphaenvmapmask
$no_fullbright
$no_portal

$outline
$overbrightfactor

$phong
$phongalbedotint
$phongboost
$phongexponent
$phongexponenttexture
$phongfresnelranges
$phongwarptexture
$pos

$receiveflashlight
$reflectamount
$reflectentities
$reflecttexture
$reflecttint
$refractamount
$refracttexture
$refracttint

$scale
$scaleedgesoftnessbasedonscreenres
$scroll1
$scroll2
$seamless_scale
$selfillum
$selfillumfresnel
$selfillumfresnelminmaxexp
$selfillum_envmapmask_alpha
$selfillummask
$selfillumtint

$shadowdepth
$size
$softedges
$spriteorientation
$spriteorigin
$ssbump
$stretch

$surfaceprop:First albedo surface property.
$surfaceprop2:Second albedo surface property.

$texture2
$texture2scale
$texture2transform
$translucent

$unlit
$unlitfactor

$vertexalpha
$vertexcolor

$writez

[/parameters]

# Material proxies
# '\' can be used for a new line in a tooltip
# <proxy>:<tooltip>:<variablelist>
[proxies]

Abs:Computes the absolute value of a variable.:srcVar1:resultVar
Add:Adds two variables.:srcVar1:srcVar2:resultVar
AnimatedTexture:Increments frame variable.\animatedtextureframerate is a fixed variable.:animatedtexturevar:animatedtextureframenumvar:animatedtextureframerate

BreakableSurface:Sets the base texture to a material name held by the entity (used for switching surface material on shatter).\Must be attached to a func_breakablesurface entity.

Camo:Camo:camopatterntexture:camoboundingboxmin:camoboundingboxmax:surfaceprop
Clamp:Clamps a variable to a specified range of values.:srcVar1:min:max:resultVar
ConveyorScroll:Returns the scroll parameters for a texture used as a conveyor.\Must be attached to func_conveyor entity.:textureScrollVar
CurrentTime:Returns the current time as a float.:resultVar

Divide:Divides the first variable by the second.:srcVar1:srcVar2:resultVar

Empty:Used to comment out proxies. Surround a bunch of proxies with the empty proxy to cause those proxies to not operate.
EntitySpeed:Stores the entity's speed into a variable.\Does not work on world surfaces.:scale:resultVar
EntityRandom:A proxy that returns a random number associated with the entity the material is applied to. Can be helpful for making animated textures not all be in sync.:scale:resultVar
Equals:Copies a variable to the result variable.:srcVar1:resultVar
Exponential:Computes ( scale * e ^ ( srcVar1 + offset ) ).:srcVar1:scale:offset:minVal:maxVal:resultVar

Frac:Returns the fractional component of a number.\If a vector type variable is provided, this function will return the fractional component of each member of the array.:srcVar1

GaussianNoise:Produces a noisy signal where values are near the average.:mean:halfWidth:minVal:maxVal:resultVar

HeliBlade

LampBeam:Modulates the material's alpha value based on angle between the beam's direction and the viewer's eye point.\This is used to make the beams of volumetric light on lights fade as you look at them dead on.\Note- Must be attached to entity for angle use.
LampHalo:Modulates the material's alpha value based on angle between the beam's direction and the viewer's eye point.\Like the LampBeam proxy, but used for the halo at the beam's base.\Note- Must be attached to entity for angle use.
LessOrEqual:Returns different values based relation of supplied variables.:srcVar1:srcVar1:lessEqualVar:greaterVar:resultVar
LinearRamp:Produces an ever increasing value.:rate:initialValue:resultVar

MaterialModify:Sets the base texture to a value held by the entity (used for entity controlled texture animations).\Only works when attached to an entity.
MatrixRotate:Creates a rotation matrix from the provided axis and angle.:axisVar:angle:resultVar
Multiply:Multiplies two variables together.:srcVar1:srcVar2:resultVar

ParticleSphereProxy
PlayerDamageTime:Stores the time since the player was last damaged, in a variable.:scale:resultVar
PlayerHealth:Stores the player health (0-1) in a variable.:scale:resultVar
PlayerPosition:Stores the player's position into a variable.\Only works for vector variables like $baseTextureOffset or $color.:scale:resultVar
PlayerProximity:Stores the distance from the entity the material is on to the player into a variable.\Does not work on world surfaces.:scale:resultVar
PlayerSpeed:Stores the speed of the player into a variable.:scale:resultVar
PlayerTeam:Stores the equality of a player's team to a variable.:team:resultVar
PlayerView:Stores the dot product of the view direction and the direction from the camera to the entity the material is on.\Does not work on world surfaces.:scale:resultVar

Shadow
ShadowModel
Sine:Creates a sine wave.:sineperiod:sinemin:sinemax:timeoffset:resultVar
Subtract:Subtracts the second variable from the first.:srcVar1:srcVar2:resultVar

TextureScroll:Returns a transform matrix or vector that will translate a texture at a given angle at a given rate.:textureScrollVar:textureScrollRate:textureScrollAngle
TextureTransform:Generates a texture transform matrix.:centerVar:scaleVar:rotateVar:translateVar:resultVar
ToggleTexture:Toggles a texture based on the frame number set by the attached entity.\Must be attached to an entity.:toggleTextureVar:toggleTextureFrameNumVar:toggleShouldWrap

UniformNoise:Produces a noisy signal where each value is equally likely to occur.:minVal:maxVal:resultVar

WaterLOD:Coordinates water LOD values between the map's water_lod_control entity and the material's internal values.

[/proxies]

# BSP Info Settings
# <setting>:<value>
[vbspinfo]

saveLumpNameNotNumber:false

[/vbspinfo]

# Pakfile Editor Settings
# <setting>:<value>
[vpakfile]

scan_pak_vmts:true
scan_pak_mdls:false
scan_pak_phys:false

new_pakfile_extra_reserve:52428800

# Path Trim Names
# <folder name>
[contentdirectories]

/bin/
/cache/
/cfg/
/data/
/downloadlists/
/downloads/
/editor/
/gamemodes/
/help/
/lua/
/maps/
/materials/
/materialsrc/
/media/
/models/
/particles/
/resource/
/save/
/scenes/
/screenshots/
/scripts/
/settings/
/shaders/
/sound/
/spawnicons/

[/contentdirectories]

# VMT Material Keyvalues
# <key>
[vmtmaterialkeys]

$bottommaterial
$crackmaterial
$fallbackmaterial
$iris
$underwateroverlay

[/vmtmaterialkeys]

# VMT Texture Keyvalues
# Keys and ignore values should be lower case
# Use ':' to seperate ignore values
# <key>:<ignore value list>
[vmttexturekeys]

$ambientocclusiontexture
$basetexture
$basetexture2
$blendmodulatetexture
$bumpmap
$bumpmap2
$cloudalphatexture
$detail
$dudvmap
$envmapmask
$fleshbordertexture1d
$fleshcubetexture 
$fleshinteriornoisetexture
$fleshinteriortexture
$fleshnormaltexture
$fleshsubsurfacetexture
$hdrbasetexture
$hdrcompressedtexture
$lightwarptexture
$lightwarptexture
$material
$normalmap
$phongexponenttexture
$phongwarptexture
$reflecttexture:_rt_waterreflection:rt_waterreflection
$refracttexture:_rt_waterrefraction:rt_waterrefraction
$selfillummask
$selfillumtexture
$texture
$texture2
%tooltexture
;$envmap:env_cubemap
;$glassenvmap:env_cubemap
srgb?$basetexture

[/vmttexturekeys]

# Model File Keys
# (studio) .mdl .spr .vmt
# <key>
[studiokeys]

# Base

model
shootmodel

# DoD:S

point_allies_model
point_axis_model
point_reset_model

# HL2

missilemodel

# TF2

team_model_0
team_model_2
team_model_3

[/studiokeys]

# Material Name Keys
# (material) .spr .vmt
# <key>
[materialkeys]

# Base

material
ropematerial

# DoD:S

point_hud_icon_neutral
point_hud_icon_axis
point_hud_icon_allies
point_hud_icon_timercap
point_hud_icon_bombed

# TF2

team_icon_0
team_icon_2
team_icon_3
team_overlay_0
team_overlay_2
team_overlay_3
team_base_icon_2
team_base_icon_3

[/materialkeys]

# Sprite File Keys
# (sprite) .spr .vmt
# <key>
[spritekeys]

# Base

endsprite
fireballsprite
firesprite
material
overlaymaterial
smokesprite
texture

# HL2

model
spriteflash
spritesmoke

# L4D

beamsprite
halosprite

[/spritekeys]

# Sound File Keyvalues
# (sound) .mp3 .wav
# <key>
[soundkeys]

# Base

breaksound
closesound
gassound
gustsound
locked_sound
message
messagesound
movementsound
movepingsound
movesound
noise1
noise2
puntsound
reversalsoundlarge
reversalsoundmedium
reversalsoundsmall
slidesoundback
slidesoundfwd
soundcloseoverride
soundlockedoverride
soundmoveoverride
soundopenoverride
soundunlockedoverride
startclosesound
startsound
stopsound
unlocked_sound

# DoD:S

point_allies_capsound
point_axis_capsound
point_resetsound

# HL2

fireendsound
firestartsound
flysound
incomingsound
launchsound
pulsefiresound
rotatesound
rotatestartsound
rotatestopsound
team_capsound_0
team_capsound_2
team_capsound_3

# L4D

disablesound

[/soundkeys]

# Scene File Keyvalues
# (scene) .vcd
# <key>
[scenekeys]

# Base

scenefile

[/scenekeys]

# Particle System Keyvalues
# (particle) .pcf
# <key>
[particlekeys]

# Base

effect_name

[/particlekeys]

# Special File Keyvalues
# Not scanned for extra content
# All '*' are replaced with the value
# <key>:<path>
[specialkeys]

vehiclescript:*

[/specialkeys]

# Map Specific Files
# All '*' are replaced with the name of the map
# <relative path>:<type name>
[mapfiles]

maps/*.nav:Navigation Mesh
maps/graphs/*.ain:Nodegraph
maps/soundcache/*.cache:Soundcache
# "Soundscape" is a reserved type name with special handling
scripts/soundscapes_*.txt:Soundscape
# "Soundscript" is a reserved type name with special handling
maps/*_level_sounds.txt:Soundscript
maps/*.txt:Map Information
resource/overviews/*.txt:Overview Data
;/particles/particles_manifest.txt:Particle Manifest
# "Particle Manifest" is a reserved type name with special handling
particles/*_manifest.txt:Particle Manifest

[/mapfiles]

[/vpakfile]

# VBSP Editor Settings
# <setting>:<value>
[vvbsp]

# Detail Orientation Keys
# <key>
[detailorientations]

Static
Rotate Around Origin
Rotate Around Z-Axis

[/detailorientations]

# Sprite Shape Keys
# <key>:<info>
[spriteshapes]

:<none>
tri:Triangle
cross:Cross

[/spriteshapes]

[/vvbsp]
